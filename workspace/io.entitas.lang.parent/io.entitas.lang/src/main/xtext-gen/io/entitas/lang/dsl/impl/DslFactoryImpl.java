/**
 * generated by Xtext 2.11.0
 */
package io.entitas.lang.dsl.impl;

import io.entitas.lang.dsl.AccessRule;
import io.entitas.lang.dsl.Alias;
import io.entitas.lang.dsl.AliasList;
import io.entitas.lang.dsl.AliasRule;
import io.entitas.lang.dsl.Component;
import io.entitas.lang.dsl.Context;
import io.entitas.lang.dsl.ContextId;
import io.entitas.lang.dsl.ContextScope;
import io.entitas.lang.dsl.ContextScopes;
import io.entitas.lang.dsl.DslFactory;
import io.entitas.lang.dsl.DslPackage;
import io.entitas.lang.dsl.MatcherRule;
import io.entitas.lang.dsl.Namespace;
import io.entitas.lang.dsl.PropertyList;
import io.entitas.lang.dsl.PropertyPrefix;
import io.entitas.lang.dsl.PropertyRules;
import io.entitas.lang.dsl.Root;
import io.entitas.lang.dsl.SingleAlias;
import io.entitas.lang.dsl.Target;
import io.entitas.lang.dsl.TargetId;
import io.entitas.lang.dsl.TargetParameter;
import io.entitas.lang.dsl.TriggerRule;
import io.entitas.lang.dsl.Version;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DslFactoryImpl extends EFactoryImpl implements DslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DslFactory init()
  {
    try
    {
      DslFactory theDslFactory = (DslFactory)EPackage.Registry.INSTANCE.getEFactory(DslPackage.eNS_URI);
      if (theDslFactory != null)
      {
        return theDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DslPackage.ROOT: return createRoot();
      case DslPackage.TARGET: return createTarget();
      case DslPackage.TARGET_ID: return createTargetId();
      case DslPackage.TARGET_PARAMETER: return createTargetParameter();
      case DslPackage.VERSION: return createVersion();
      case DslPackage.NAMESPACE: return createNamespace();
      case DslPackage.CONTEXT: return createContext();
      case DslPackage.CONTEXT_ID: return createContextId();
      case DslPackage.ALIAS: return createAlias();
      case DslPackage.ALIAS_LIST: return createAliasList();
      case DslPackage.ALIAS_RULE: return createAliasRule();
      case DslPackage.SINGLE_ALIAS: return createSingleAlias();
      case DslPackage.COMPONENT: return createComponent();
      case DslPackage.PROPERTY_LIST: return createPropertyList();
      case DslPackage.PROPERTY_RULES: return createPropertyRules();
      case DslPackage.PROPERTY_PREFIX: return createPropertyPrefix();
      case DslPackage.CONTEXT_SCOPES: return createContextScopes();
      case DslPackage.SYSTEM: return createSystem();
      case DslPackage.ACCESS_RULE: return createAccessRule();
      case DslPackage.TRIGGER_RULE: return createTriggerRule();
      case DslPackage.MATCHER_RULE: return createMatcherRule();
      case DslPackage.CONTEXT_SCOPE: return createContextScope();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Root createRoot()
  {
    RootImpl root = new RootImpl();
    return root;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Target createTarget()
  {
    TargetImpl target = new TargetImpl();
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TargetId createTargetId()
  {
    TargetIdImpl targetId = new TargetIdImpl();
    return targetId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TargetParameter createTargetParameter()
  {
    TargetParameterImpl targetParameter = new TargetParameterImpl();
    return targetParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Version createVersion()
  {
    VersionImpl version = new VersionImpl();
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Namespace createNamespace()
  {
    NamespaceImpl namespace = new NamespaceImpl();
    return namespace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Context createContext()
  {
    ContextImpl context = new ContextImpl();
    return context;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextId createContextId()
  {
    ContextIdImpl contextId = new ContextIdImpl();
    return contextId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Alias createAlias()
  {
    AliasImpl alias = new AliasImpl();
    return alias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AliasList createAliasList()
  {
    AliasListImpl aliasList = new AliasListImpl();
    return aliasList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AliasRule createAliasRule()
  {
    AliasRuleImpl aliasRule = new AliasRuleImpl();
    return aliasRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SingleAlias createSingleAlias()
  {
    SingleAliasImpl singleAlias = new SingleAliasImpl();
    return singleAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Component createComponent()
  {
    ComponentImpl component = new ComponentImpl();
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyList createPropertyList()
  {
    PropertyListImpl propertyList = new PropertyListImpl();
    return propertyList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyRules createPropertyRules()
  {
    PropertyRulesImpl propertyRules = new PropertyRulesImpl();
    return propertyRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyPrefix createPropertyPrefix()
  {
    PropertyPrefixImpl propertyPrefix = new PropertyPrefixImpl();
    return propertyPrefix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextScopes createContextScopes()
  {
    ContextScopesImpl contextScopes = new ContextScopesImpl();
    return contextScopes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public io.entitas.lang.dsl.System createSystem()
  {
    SystemImpl system = new SystemImpl();
    return system;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AccessRule createAccessRule()
  {
    AccessRuleImpl accessRule = new AccessRuleImpl();
    return accessRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TriggerRule createTriggerRule()
  {
    TriggerRuleImpl triggerRule = new TriggerRuleImpl();
    return triggerRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MatcherRule createMatcherRule()
  {
    MatcherRuleImpl matcherRule = new MatcherRuleImpl();
    return matcherRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextScope createContextScope()
  {
    ContextScopeImpl contextScope = new ContextScopeImpl();
    return contextScope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslPackage getDslPackage()
  {
    return (DslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DslPackage getPackage()
  {
    return DslPackage.eINSTANCE;
  }

} //DslFactoryImpl
