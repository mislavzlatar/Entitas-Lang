/**
 * generated by Xtext 2.11.0
 */
package io.entitas.lang.dsl.impl;

import io.entitas.lang.dsl.Component;
import io.entitas.lang.dsl.ContextScopes;
import io.entitas.lang.dsl.DslPackage;
import io.entitas.lang.dsl.PropertyList;
import io.entitas.lang.dsl.PropertyPrefix;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.entitas.lang.dsl.impl.ComponentImpl#getName <em>Name</em>}</li>
 *   <li>{@link io.entitas.lang.dsl.impl.ComponentImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link io.entitas.lang.dsl.impl.ComponentImpl#getScope <em>Scope</em>}</li>
 *   <li>{@link io.entitas.lang.dsl.impl.ComponentImpl#getListOfProperties <em>List Of Properties</em>}</li>
 *   <li>{@link io.entitas.lang.dsl.impl.ComponentImpl#getPropertyPrefix <em>Property Prefix</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentImpl extends MinimalEObjectImpl.Container implements Component
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected EList<String> parameters;

  /**
   * The cached value of the '{@link #getScope() <em>Scope</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected ContextScopes scope;

  /**
   * The cached value of the '{@link #getListOfProperties() <em>List Of Properties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getListOfProperties()
   * @generated
   * @ordered
   */
  protected PropertyList listOfProperties;

  /**
   * The cached value of the '{@link #getPropertyPrefix() <em>Property Prefix</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropertyPrefix()
   * @generated
   * @ordered
   */
  protected PropertyPrefix propertyPrefix;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.COMPONENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.COMPONENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getParameters()
  {
    if (parameters == null)
    {
      parameters = new EDataTypeEList<String>(String.class, this, DslPackage.COMPONENT__PARAMETERS);
    }
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContextScopes getScope()
  {
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetScope(ContextScopes newScope, NotificationChain msgs)
  {
    ContextScopes oldScope = scope;
    scope = newScope;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.COMPONENT__SCOPE, oldScope, newScope);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setScope(ContextScopes newScope)
  {
    if (newScope != scope)
    {
      NotificationChain msgs = null;
      if (scope != null)
        msgs = ((InternalEObject)scope).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.COMPONENT__SCOPE, null, msgs);
      if (newScope != null)
        msgs = ((InternalEObject)newScope).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.COMPONENT__SCOPE, null, msgs);
      msgs = basicSetScope(newScope, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.COMPONENT__SCOPE, newScope, newScope));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyList getListOfProperties()
  {
    return listOfProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetListOfProperties(PropertyList newListOfProperties, NotificationChain msgs)
  {
    PropertyList oldListOfProperties = listOfProperties;
    listOfProperties = newListOfProperties;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.COMPONENT__LIST_OF_PROPERTIES, oldListOfProperties, newListOfProperties);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setListOfProperties(PropertyList newListOfProperties)
  {
    if (newListOfProperties != listOfProperties)
    {
      NotificationChain msgs = null;
      if (listOfProperties != null)
        msgs = ((InternalEObject)listOfProperties).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.COMPONENT__LIST_OF_PROPERTIES, null, msgs);
      if (newListOfProperties != null)
        msgs = ((InternalEObject)newListOfProperties).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.COMPONENT__LIST_OF_PROPERTIES, null, msgs);
      msgs = basicSetListOfProperties(newListOfProperties, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.COMPONENT__LIST_OF_PROPERTIES, newListOfProperties, newListOfProperties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PropertyPrefix getPropertyPrefix()
  {
    return propertyPrefix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPropertyPrefix(PropertyPrefix newPropertyPrefix, NotificationChain msgs)
  {
    PropertyPrefix oldPropertyPrefix = propertyPrefix;
    propertyPrefix = newPropertyPrefix;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.COMPONENT__PROPERTY_PREFIX, oldPropertyPrefix, newPropertyPrefix);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPropertyPrefix(PropertyPrefix newPropertyPrefix)
  {
    if (newPropertyPrefix != propertyPrefix)
    {
      NotificationChain msgs = null;
      if (propertyPrefix != null)
        msgs = ((InternalEObject)propertyPrefix).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.COMPONENT__PROPERTY_PREFIX, null, msgs);
      if (newPropertyPrefix != null)
        msgs = ((InternalEObject)newPropertyPrefix).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.COMPONENT__PROPERTY_PREFIX, null, msgs);
      msgs = basicSetPropertyPrefix(newPropertyPrefix, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.COMPONENT__PROPERTY_PREFIX, newPropertyPrefix, newPropertyPrefix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.COMPONENT__SCOPE:
        return basicSetScope(null, msgs);
      case DslPackage.COMPONENT__LIST_OF_PROPERTIES:
        return basicSetListOfProperties(null, msgs);
      case DslPackage.COMPONENT__PROPERTY_PREFIX:
        return basicSetPropertyPrefix(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.COMPONENT__NAME:
        return getName();
      case DslPackage.COMPONENT__PARAMETERS:
        return getParameters();
      case DslPackage.COMPONENT__SCOPE:
        return getScope();
      case DslPackage.COMPONENT__LIST_OF_PROPERTIES:
        return getListOfProperties();
      case DslPackage.COMPONENT__PROPERTY_PREFIX:
        return getPropertyPrefix();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.COMPONENT__NAME:
        setName((String)newValue);
        return;
      case DslPackage.COMPONENT__PARAMETERS:
        getParameters().clear();
        getParameters().addAll((Collection<? extends String>)newValue);
        return;
      case DslPackage.COMPONENT__SCOPE:
        setScope((ContextScopes)newValue);
        return;
      case DslPackage.COMPONENT__LIST_OF_PROPERTIES:
        setListOfProperties((PropertyList)newValue);
        return;
      case DslPackage.COMPONENT__PROPERTY_PREFIX:
        setPropertyPrefix((PropertyPrefix)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.COMPONENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DslPackage.COMPONENT__PARAMETERS:
        getParameters().clear();
        return;
      case DslPackage.COMPONENT__SCOPE:
        setScope((ContextScopes)null);
        return;
      case DslPackage.COMPONENT__LIST_OF_PROPERTIES:
        setListOfProperties((PropertyList)null);
        return;
      case DslPackage.COMPONENT__PROPERTY_PREFIX:
        setPropertyPrefix((PropertyPrefix)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.COMPONENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DslPackage.COMPONENT__PARAMETERS:
        return parameters != null && !parameters.isEmpty();
      case DslPackage.COMPONENT__SCOPE:
        return scope != null;
      case DslPackage.COMPONENT__LIST_OF_PROPERTIES:
        return listOfProperties != null;
      case DslPackage.COMPONENT__PROPERTY_PREFIX:
        return propertyPrefix != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", parameters: ");
    result.append(parameters);
    result.append(')');
    return result.toString();
  }

} //ComponentImpl
