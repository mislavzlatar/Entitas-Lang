/**
 * generated by Xtext 2.11.0
 */
package io.entitas.lang.dsl.impl;

import io.entitas.lang.dsl.DslPackage;
import io.entitas.lang.dsl.SingleAlias;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Single Alias</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.entitas.lang.dsl.impl.SingleAliasImpl#getTypeAlias <em>Type Alias</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SingleAliasImpl extends MinimalEObjectImpl.Container implements SingleAlias
{
  /**
   * The default value of the '{@link #getTypeAlias() <em>Type Alias</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeAlias()
   * @generated
   * @ordered
   */
  protected static final String TYPE_ALIAS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTypeAlias() <em>Type Alias</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeAlias()
   * @generated
   * @ordered
   */
  protected String typeAlias = TYPE_ALIAS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SingleAliasImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.SINGLE_ALIAS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTypeAlias()
  {
    return typeAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeAlias(String newTypeAlias)
  {
    String oldTypeAlias = typeAlias;
    typeAlias = newTypeAlias;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SINGLE_ALIAS__TYPE_ALIAS, oldTypeAlias, typeAlias));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.SINGLE_ALIAS__TYPE_ALIAS:
        return getTypeAlias();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.SINGLE_ALIAS__TYPE_ALIAS:
        setTypeAlias((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SINGLE_ALIAS__TYPE_ALIAS:
        setTypeAlias(TYPE_ALIAS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SINGLE_ALIAS__TYPE_ALIAS:
        return TYPE_ALIAS_EDEFAULT == null ? typeAlias != null : !TYPE_ALIAS_EDEFAULT.equals(typeAlias);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (typeAlias: ");
    result.append(typeAlias);
    result.append(')');
    return result.toString();
  }

} //SingleAliasImpl
